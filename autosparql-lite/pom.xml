<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>autosparql-parent</artifactId>
		<groupId>org.dllearner</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>autosparql-lite</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>AutoSPARQL Lite</name>
	
	<profiles>
		<profile>
			<id>prod</id>
			<activation>
				<property>
					<name>prod</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>

					<server>local</server>
					<url>http://127.0.0.1:8080/manager</url>
				</configuration>
			</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<module>org.autosparql.Application_production</module>
								</configuration>
								<goals>
									<goal>compile</goal>
									<!-- <goal>generateAsync</goal> -->
									<!--<goal>test</goal> -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<hostedWebapp>war</hostedWebapp>
							<runTarget>org.autosparql/index.html</runTarget>
							<modules>
								<module>org.autosparql.Application_production</module>
							</modules>
							<localWorkers>6</localWorkers>
						</configuration>

					</plugin>
				</plugins>
			</build>
		</profile>
	<profile>
			<id>hosted</id>
			<activation>
				<property>
					<name>hosted</name>
				</property>
			</activation>
			<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
	 	<!-- 
	  	<resources>
                        <resource>
                                <directory>src/main/java</directory>
                                <includes>
                                        <include>**/*.java</include>
                                        <include>**/*.gwt.xml</include>
                                </includes>
                        </resource>
                       <resource>
          <directory>src/main/resources</directory>
          <filtering>true</filtering>
         </resource>
        </resources>-->
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<module>org.autosparql.Application</module>
								</configuration>
								<goals>
									<goal>compile</goal>
									<!-- <goal>generateAsync</goal> -->
									<!--<goal>test</goal> -->
								</goals>
							</execution>
						</executions>
				 		<configuration>
							<hostedWebapp>war</hostedWebapp>
							<runTarget>index.html</runTarget>
							<modules>
								<module>org.autosparql.Application</module>
							</modules>
							<localWorkers>6</localWorkers>
						</configuration>
 
					</plugin>
 					 <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions> 
				 <configuration>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<extraJvmArgs>-Xmx1024m</extraJvmArgs>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
		 	</plugin>  
		 				<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<configuration>

					<server>local</server>
					<url>http://127.0.0.1:8080/manager</url>
				</configuration>
			</plugin>
		 	
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<repositories>
	 <repository>
    <id>sourceforge</id>
    <url>http://oss.sonatype.org/</url>
    <releases>
      <enabled>true</enabled>
    </releases>
    <snapshots>
      <enabled>true</enabled>
    </snapshots>
  </repository>
	</repositories>
	<properties>
		<!-- Convenience property to set the GWT version -->
		<gwtVersion>2.3.0</gwtVersion>
		<!-- GWT needs at least java 1.5 -->
		<webappDirectory>war</webappDirectory>
<!--		 evil : so geht deploy nicht weil Application directory sonst nicht gebaut wird <webappDirectory>${project.build.directory}/test</webappDirectory>-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>2.3.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>2.3.0</version>
      <scope>provided</scope>
    </dependency>
 
		<dependency>
	<groupId>net.sf.ehcache</groupId>
	<artifactId>ehcache</artifactId>
	<version>2.4.5</version>
	<type>pom</type>
	</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.extjs</groupId>
			<artifactId>gxt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.dllearner</groupId>
			<artifactId>components-ext</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
	</dependencies>

	<build>
<outputDirectory>war/WEB-INF/classes</outputDirectory>
		<!-- Generate compiled stuff in the folder used for developing mode -->
	<!-- 	<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
	  	<resources>
                        <resource>
                                <directory>src/main/java</directory>
                                <includes>
                                        <include>**/*.java</include>
                                        <include>**/*.gwt.xml</include>
                                        <include>**/*.js</include>
                                        <include>**/*.css</include>
                                </includes>
                        </resource>
                       <resource>
          <directory>src/main/resources</directory>
          <filtering>true</filtering>
         </resource>
        </resources>
 -->
		<plugins>
	<!-- 	
		
 -->
			<!-- GWT Maven Plugin -->
	<plugin>
	 					<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
								<executions>
							<execution>
								<configuration>
									<module>org.autosparql.Application</module>
								</configuration>
								<goals>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
						<hostedWebapp>war</hostedWebapp>
							<runTarget>org.autosparql/index.html</runTarget>
							<modules>
								<module>org.autosparql.Application</module>
							</modules>
							<localWorkers>6</localWorkers>
						</configuration>

</plugin> 	
 <!--<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<module>org.autosparql.Application</module>
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<modules>
						<module>org.autosparql.Application</module>
					</modules>
					<runTarget>Application.html</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<extraJvmArgs>-Xmx1024m</extraJvmArgs>
					<localWorkers>4</localWorkers>
				</configuration>
			</plugin>-->

			<!-- Copy static web files (like Application.html) before executing gwt:run -->
	 		<!--  <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions> -->
				<!--  <configuration>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<extraJvmArgs>-Xmx1024m</extraJvmArgs>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>-->
		<!-- 	</plugin> --> 
		<!--	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>-->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-war-plugin
										</artifactId>
										<versionRange>
											[2.0,)
										</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
